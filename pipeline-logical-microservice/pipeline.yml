---
resources:
- name: repo-coll-evo
  type: git
  source:
    uri: ((app-url))
    branch: ((app-branch))
    username: ((github-username))
    password: ((github-password))
    skip_ssl_verification: true
    disable_ci_skip: false
    ignore_paths:
    - app-descriptor.df

- name: pipeline-tools
  type: git
  source:
    uri: ((tools-scripts-url))
    branch: ((tools-branch))
    username: ((github-username))
    password: ((github-password))
    skip_ssl_verification: true

- name: config-logical-micro
  type: git
  source:
    uri: ((config-scripts-url))
    branch: ((tools-branch))
    username: ((github-username))
    password: ((github-password))
    skip_ssl_verification: true

- name: repoput
  type: git
  source:
    uri: ((app-url))
    branch: ((app-branch))
    username: ((github-username))
    password: ((github-password))
    skip_ssl_verification: true
    disable_ci_skip: false

- name: repoput1
  type: git
  source:
    uri: ((app-url))
    branch: ((app-branch))
    username: ((github-username))
    password: ((github-password))
    skip_ssl_verification: true
    disable_ci_skip: false

- name: keyval
  type: keyval

resource_types:
  - name: keyval
    type: docker-image
    source:
      repository: swce/keyval-resource

jobs:
- name: deploy-streams
  public: true
  plan:
  - get: pipeline-tools
  - get: repo-coll-evo
  - get: config-logical-micro
    trigger: true
  - task: deploy-streams
    privileged: true
    file: tools/tasks/deploy/deploy-streams/task.yml
    input_mapping: {repo-coll-evo: repo, config-logical-micro: config, pipeline-tools: tools}
    params:
      <<: *common-git-params
      ENVIRONMENT_TO_DEPLOY: dev1
  - put: keyval
    params:
      file: keyvalout/keyval.properties

- name: soapui-tests
  public: true
  plan:
  - aggregate:
    - get: pipeline-tools
    - get: repo-coll-evo
    - get: keyval
      passed:
      - deploy-streams
      trigger: true
  - task: soapui-tests
    privileged: true
    file: tools/tasks/deploy/do-nothing/task.yml
    input_mapping: {repo: repo-coll-evo, tools: pipeline-tools}
    params:
      <<: *common-git-params
  - put: keyval
    params:
      file: keyvalout/keyval.properties

- name: create-release
  public: true
  plan:
  - aggregate:
    - get: pipeline-tools
    - get: repo-coll-evo
    - get: config-logical-micro
    - get: keyval
      passed:
      - soapui-tests
      trigger: true
  - task: prepare-release
    privileged: true
    file: tools/tasks/deploy/prepare-release/task.yml
    input_mapping: {repo: repo-coll-evo, tools: pipeline-tools, config: config-logical-micro}
    params:
      <<: *common-git-params
      SONAR_BRANCH: ((sonar-branch))
      USERNAME: ((github-username))
      PASSWORD: ((github-password))
  - put: keyval
    params:
      file: keyvalout/keyval.properties
  - put: repoput
    params:
      repository: out
  - task: create-release-step1
    privileged: true
    file: tools/tasks/deploy/create-release-step1/task.yml
    input_mapping: {tools: pipeline-tools}
    params:
      <<: *common-git-params
      SONAR_BRANCH: ((sonar-branch))
      USERNAME: ((github-username))
      PASSWORD: ((github-password))
  - put: keyval
    params:
      file: keyvalout/keyval.properties
  - put: repoput1
    params:
      repository: out
  - task: create-release-step2
    privileged: true
    file: tools/tasks/deploy/create-release-step2/task.yml
    input_mapping: {tools: pipeline-tools}
    params:
      <<: *common-git-params
      SONAR_BRANCH: ((sonar-branch))
      USERNAME: ((github-username))
      PASSWORD: ((github-password))
  - put: keyval
    params:
      file: keyvalout/keyval.properties
  - put: repo-coll-evo
    params:
      repository: out

- name: pvcs-upload
  public: true
  plan:
  - aggregate:
    - get: pipeline-tools
    - get: repo-coll-evo
    - get: keyval
      passed:
      - create-release
      trigger: true
  - task: pvcs-upload
    privileged: true
    file: tools/tasks/deploy/pvcs-upload/task.yml
    input_mapping: {repo: repo-coll-evo, tools: pipeline-tools}
    params:
      <<: *common-git-params
      PVCS_URL: ((pvcs-url))
      PVCS_USERNAME: ((pvcs-username))
      PVCS_PASSWORD: ((pvcs-password))
      PVCS_CHECKOUTDIR: ((pvcs-checkoutdir))
  - put: keyval
    params:
      file: keyvalout/keyval.properties

common-git-params: &common-git-params
  BUILD_OPTIONS: ((build-options))
  GIT_EMAIL: ((git-email))
  GIT_NAME: ((git-name))
  CURRENT_BRANCH: ((app-branch))
  TRUSTSTORE: ((truststore))
  GITHUB_PRIVATE_KEY: ((github-private-key))
  M2_SETTINGS_REPO_ID: ((m2-settings-repo-id))
  M2_SETTINGS_REPO_PASSWORD: ((m2-settings-repo-password))
  M2_SETTINGS_REPO_USERNAME: ((m2-settings-repo-username))
  M2_SETTINGS_REPO_MIRROR_URL: ((repo-with-binaries))
  M2_SETTINGS_REPO_SITE_URL: ((repo-with-site))
  M2_SETTINGS_REPO_RELEASE_URL: ((repo-with-binaries-for-upload))
  M2_SETTINGS_REPO_SNAPSHOTS_URL: ((repo-with-binaries-snapshots))
  M2_SETTINGS_REPO_GIT_SERVER_URL: ((gitlab-server-url))
  M2_SETTINGS_REPO_SONAR_URL: ((sonar-host-url))
  M2_SETTINGS_REPO_SONAR_TOKEN: ((sonar-login-key))

