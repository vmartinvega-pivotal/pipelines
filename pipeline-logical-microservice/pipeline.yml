---
resources:
- name: repo-coll-evo
  type: git
  source:
    uri: ((app-url))
    branch: ((app-branch))
    username: ((github-username))
    password: ((github-password))
    skip_ssl_verification: true
    disable_ci_skip: false
    ignore_paths:
    - app-descriptor.df

- name: tools
  type: git
  source:
    uri: ((tools-scripts-url))
    branch: ((tools-branch))
    username: ((github-username))
    password: ((github-password))
    skip_ssl_verification: true

- name: config-logical-micro
  type: git
  source:
    uri: ((config-scripts-url))
    branch: ((tools-branch))
    username: ((github-username))
    password: ((github-password))
    skip_ssl_verification: true

- name: repoput
  type: git
  source:
    uri: ((app-url))
    branch: ((app-branch))
    username: ((github-username))
    password: ((github-password))
    skip_ssl_verification: true
    disable_ci_skip: false

- name: repoput1
  type: git
  source:
    uri: ((app-url))
    branch: ((app-branch))
    username: ((github-username))
    password: ((github-password))
    skip_ssl_verification: true
    disable_ci_skip: false

- name: keyval
  type: keyval

#- name: send-email
#  type: email
#  source:
#    smtp:
#      host: smtp.gmail.com
#      port: "587" # this must be a string
#      username: vicente.martin.vega
#      password: 
#    from: vicente.martin.vega@gmail.com
#    to: [ "vicente.martin.vega@gmail.com" ]

resource_types:
  - name: keyval
    type: docker-image
    source:
      repository: swce/keyval-resource
  
#  - name: email
#    type: docker-image
#    source:
#      repository: mdomke/concourse-email-resource

jobs:
- name: deploy-streams
  public: true
  plan:
  - aggregate:
    - get: tools
    - get: repo-coll-evo
    - get: config-logical-micro
      trigger: true
  - task: compile-logical-microservice
    privileged: true
    file: tools/tasks/logical/compile-logical/task.yml
    input_mapping:
      repo: repo-coll-evo
      config: config-logical-micro
    output_mapping:
      out: logical_compiled_files
    params:
      <<: *common-git-params
  - put: keyval
    params:
      file: keyvalout/keyval.properties
  - task: deploy-streams
    privileged: true
    input_mapping:
      repo: logical_compiled_files
      config: config-logical-micro
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: vmartinvega/concourse-tools-tim
          tag: "latest"
      inputs:
        - name: repo
        - name: config
      params:
        ENVIRONMENT_TO_DEPLOY: collaudo-consolidato
      run:
        path: sh
        args:
        - -exc
        - |
          ROOT_FOLDER="$( pwd )"
          cd ${ROOT_FOLDER}/repo
          #./microservice.sh ../config/${ENVIRONMENT_TO_DEPLOY}.env microservice.env script
- name: soapui-tests
  public: true
  plan:
  - aggregate:
    - get: tools
    - get: repo-coll-evo
    - get: keyval
      passed:
      - deploy-streams
      trigger: true
  - task: soapui-tests
    privileged: true
    file: tools/tasks/logical/do-nothing/task.yml
    input_mapping: {repo: repo-coll-evo}
    params:
      <<: *common-git-params
  - put: keyval
    params:
      file: keyvalout/keyval.properties

- name: create-release
  public: true
  plan:
  - aggregate:
    - get: tools
    - get: repo-coll-evo
    - get: config-logical-micro
    - get: keyval
      passed:
      - soapui-tests
      trigger: true
  - task: prepare-release
    privileged: true
    file: tools/tasks/logical/prepare-release/task.yml
    input_mapping: {repo: repo-coll-evo, config: config-logical-micro}
    params:
      <<: *common-git-params
      SONAR_BRANCH: ((sonar-branch))
      USERNAME: ((github-username))
      PASSWORD: ((github-password))
  - put: keyval
    params:
      file: keyvalout/keyval.properties
  - put: repoput
    params:
      repository: out
  - task: create-release-step1
    privileged: true
    file: tools/tasks/logical/create-release-step1/task.yml
    params:
      <<: *common-git-params
      SONAR_BRANCH: ((sonar-branch))
      USERNAME: ((github-username))
      PASSWORD: ((github-password))
  - put: keyval
    params:
      file: keyvalout/keyval.properties
  - put: repoput1
    params:
      repository: out
  - task: create-release-step2
    privileged: true
    file: tools/tasks/logical/create-release-step2/task.yml
    params:
      <<: *common-git-params
      SONAR_BRANCH: ((sonar-branch))
      USERNAME: ((github-username))
      PASSWORD: ((github-password))
  - put: keyval
    params:
      file: keyvalout/keyval.properties
  - put: repo-coll-evo
    params:
      repository: out

- name: pvcs-upload
  public: true
  plan:
  - aggregate:
    - get: tools
    - get: repo-coll-evo
    - get: keyval
      passed:
      - create-release
      trigger: true
  - task: pvcs-upload
    privileged: true
    file: tools/tasks/logical/pvcs-upload/task.yml
    input_mapping: {repo: repo-coll-evo}
    params:
      <<: *common-git-params
      PVCS_URL: ((pvcs-url))
      PVCS_USERNAME: ((pvcs-username))
      PVCS_PASSWORD: ((pvcs-password))
      PVCS_CHECKOUTDIR: ((pvcs-checkoutdir))
  - put: keyval
    params:
      file: keyvalout/keyval.properties
  - task: prepare-email-text
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: vmartinvega/concourse-tools-tim
          tag: "latest"
      inputs:
        - name: keyval
        - name: tools
      outputs:
        - name: email-text
      run:
        path: bash
        args:
        - -exc
        - |
          ROOT_FOLDER="$( pwd )"
          export KEYVAL_RESOURCE=keyval
          source ${ROOT_FOLDER}/tools/tasks/resource-utils.sh
          exportKeyValProperties
          echo "Version $PASSED_TAG_RELEASED_CREATED is ready to ship to Collaudo Consolidato!" >  ./email-text/email-subject.txt
          echo "Version $PASSED_TAG_RELEASED_CREATED is ready to ship to Collaudo Consolidato!" >  ./email-text/email-body.txt
          passKeyValProperties
  - put: keyval
    params:
      file: keyvalout/keyval.properties

  #- put: send-email
  #  params:
  #    subject: ./email-text/email-subject.txt
  #    body: ./email-text/email-body.txt

  - task: update-ship-it-job-name
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: vmartinvega/concourse-tools-tim
          tag: "latest"
      inputs:
        - name: keyval
        - name: tools
      params:
        CONCOURSE_URL: ((concourse-url))
        CONCOURSE_TEAM: ((concourse-team))
        CONCOURSE_USERNAME: ((concourse-username))
        CONCOURSE_PASSWORD: ((concourse-password))
        CONCOURSE_PIPELINE_NAME: ((concourse-pipeline-name))
      run:
        path: bash
        args:
        - -exc
        - |
          ROOT_FOLDER="$( pwd )"
          export KEYVAL_RESOURCE=keyval
          source ${ROOT_FOLDER}/tools/tasks/resource-utils.sh
          exportKeyValProperties
          fly -t local login -c $CONCOURSE_URL -n $CONCOURSE_TEAM -u $CONCOURSE_USERNAME -p $CONCOURSE_PASSWORD
          fly -t local sync
          fly -t local get-pipeline -p $CONCOURSE_PIPELINE_NAME > ./original-pipeline.yml
          sed "s/Ship-version-Coll-Con-.*/Ship-version-Coll-Con-$PASSED_TAG_RELEASED_CREATED/" ./original-pipeline.yml > ./updated-pipeline.yml
          fly -t local set-pipeline -p {{concourse-pipeline-name}} -c ./updated-pipeline.yml -n
          passKeyValProperties
  - put: keyval
    params:
      file: keyvalout/keyval.properties

- name: Ship-version-Coll-Con-v0.0.0
  plan:
  - aggregate:
    - get: tools
    - get: repo-coll-evo
    - get: config-logical-micro
    - get: keyval
      passed:
        - pvcs-upload
    trigger: false
  - task: shipit-task-to-collaudo
    privileged: true
    input_mapping:
      repo: repo-coll-evo
      config: config-logical-micro
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: vmartinvega/concourse-tools-tim
          tag: "latest"
      run:
        path: sh
        args:
        - -exc
        - |
          ROOT_FOLDER="$( pwd )"
          export KEYVAL_RESOURCE=keyval
          source ${ROOT_FOLDER}/tools/tasks/resource-utils.sh
          exportKeyValProperties
          echo "DEBUG: checking out the verson "${PASSED_TAG_RELEASED_CREATED}
          git checkout tags/${PASSED_TAG_RELEASED_CREATED}
          echo "Output of your manually triggered Ship-it task."
          passKeyValProperties
  - put: keyval
    params:
      file: keyvalout/keyval.properties

common-git-params: &common-git-params
  BUILD_OPTIONS: ((build-options))
  GIT_EMAIL: ((git-email))
  GIT_NAME: ((git-name))
  CURRENT_BRANCH: ((app-branch))
  TRUSTSTORE: ((truststore))
  GITHUB_PRIVATE_KEY: ((github-private-key))
  M2_SETTINGS_REPO_ID: ((m2-settings-repo-id))
  M2_SETTINGS_REPO_PASSWORD: ((m2-settings-repo-password))
  M2_SETTINGS_REPO_USERNAME: ((m2-settings-repo-username))
  M2_SETTINGS_REPO_MIRROR_URL: ((repo-with-binaries))
  M2_SETTINGS_REPO_SITE_URL: ((repo-with-site))
  M2_SETTINGS_REPO_RELEASE_URL: ((repo-with-binaries-for-upload))
  M2_SETTINGS_REPO_SNAPSHOTS_URL: ((repo-with-binaries-snapshots))
  M2_SETTINGS_REPO_GIT_SERVER_URL: ((gitlab-server-url))
  M2_SETTINGS_REPO_SONAR_URL: ((sonar-host-url))
  M2_SETTINGS_REPO_SONAR_TOKEN: ((sonar-login-key))

