---
resources:
- name: repo
  type: git
  source:
    uri: ((app-url))
    branch: ((app-branch))
    username: ((github-username))
    password: ((github-password))
    skip_ssl_verification: true
    disable_ci_skip: false

- name: tools
  type: git
  source:
    uri: ((tools-scripts-url))
    branch: ((tools-branch))
    username: ((github-tools-username))
    password: ((github-tools-password))
    skip_ssl_verification: true

- name: keyval
  type: keyval

resource_types:
  - name: keyval
    type: docker-image
    source:
      repository: swce/keyval-resource

jobs:
- name: build
  public: true
  plan:
  - aggregate:
    - get: tools
    - get: repo
      trigger: true
  - task: build
    privileged: true
    file: tools/tasks/build/task.yml
    params:
      <<: *common-params
  - put: keyval
    params:
      file: keyvalout/keyval.properties

- name: unit-test
  public: true
  plan:
  - aggregate:
    - get: tools
    - get: repo
    - get: keyval
      passed:
      - build
      trigger: true
  - task: unit-test
    privileged: true
    file: tools/tasks/unit-test/task.yml
    params:
      <<: *common-params
  - put: keyval
    params:
      file: keyvalout/keyval.properties

- name: deploy-microservice
  public: true
  plan:
  - aggregate:
    - get: tools
    - get: repo
    - get: keyval
      passed:
      - unit-test
      trigger: true
  - task: deploy-microservice
    privileged: true
    file: tools/tasks/deploy-springboot-app/task.yml
    params:
      <<: *common-params
      PWS_USER: ((pws-user))
      PWS_PWD: ((pws-pwd))
      PWS_ORG: ((pws-org))
      PWS_SPACE: ((pws-space))
      PWS_API: ((pws-api))
      APP_MEMORY_LIMIT: 2GB
      APP_DISK_LIMIT: 1GB
      APP_INSTANCES: 1
  - put: keyval
    params:
      file: keyvalout/keyval.properties

- name: undeploy-microservice
  public: true
  plan:
  - aggregate:
    - get: tools
    - get: repo
    - get: keyval
      passed:
      - deploy-microservice
      trigger: true
  - task: undeploy-microservice
    privileged: true
    file: tools/tasks/undeploy-springboot-app/task.yml
    params:
      <<: *common-params
      PWS_USER: ((pws-user))
      PWS_PWD: ((pws-pwd))
      PWS_ORG: ((pws-org))
      PWS_SPACE: ((pws-space))
      PWS_API: ((pws-api))
  - put: keyval
    params:
      file: keyvalout/keyval.properties

- name: sonarqube
  public: true
  plan:
  - aggregate:
    - get: tools
    - get: repo
    - get: keyval
      passed:
      - undeploy-microservice
      trigger: true
  - task: sonarqube
    privileged: true
    file: tools/tasks/sonarqube/task.yml
    params:
      <<: *common-params
      SONAR_BRANCH: ((sonar-branch))
  - put: keyval
    params:
      file: keyvalout/keyval.properties

- name: archive-snapshoot
  public: true
  plan:
  - aggregate:
    - get: tools
    - get: repo
    - get: keyval
      passed:
      - sonarqube
      trigger: true
  - task: archive-snapshoot
    privileged: true
    file: tools/tasks/snapshoot-build/task.yml
    params:
      <<: *common-params
      USERNAME: ((github-username))
      PASSWORD: ((github-password))
  - put: keyval
    params:
      file: keyvalout/keyval.properties

common-params: &common-params
  BUILD_OPTIONS: ((build-options))
  GIT_EMAIL: ((git-email))
  GIT_NAME: ((git-name))
  CURRENT_BRANCH: ((app-branch))
  TRUSTSTORE: ((truststore))
  GITHUB_PRIVATE_KEY: ((github-private-key))
  M2_SETTINGS_REPO_ID: ((m2-settings-repo-id))
  M2_SETTINGS_REPO_PASSWORD: ((m2-settings-repo-password))
  M2_SETTINGS_REPO_USERNAME: ((m2-settings-repo-username))
  M2_SETTINGS_REPO_MIRROR_URL: ((repo-with-binaries))
  M2_SETTINGS_REPO_SITE_URL: ((repo-with-site))
  M2_SETTINGS_REPO_RELEASE_URL: ((repo-with-binaries-for-upload))
  M2_SETTINGS_REPO_SNAPSHOTS_URL: ((repo-with-binaries-snapshots))
  M2_SETTINGS_REPO_GIT_SERVER_URL: ((gitlab-server-url))
  M2_SETTINGS_REPO_SONAR_URL: ((sonar-host-url))
  M2_SETTINGS_REPO_SONAR_TOKEN: ((sonar-login-key))
